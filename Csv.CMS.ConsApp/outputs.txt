>h
        ┌────────────────────────────────┬─────────────────────────────┬─────────────────────────────┐
        │ (H)elp                         │ Clea(r)                     │ (Q)uit                      │
        ├────────────────────────────────┴─────────────┬───────────────┴─────────────────────────────┤
        │ (D)isplay available database(s)              │                                             │
        │ (M)ount database                             │ (K)ill/close database                       │
        │ (S)earch Database                            │ (E)execute Queries                          │
        │ (P)age                                       │ Display (T)ables Info                       │
        │ Display Index Tree (N)ode Structure          │ Display (I)ndex Tree Structure              │
        │ (X)treme class                               │                                             │
        ├──────────────────────────────────────────────┴─────────────────────────────────────────────┤
        │  SELECT [*] | [t0.col0, t0.col1,..] | [COUNT|AVG|SUM](col)                                 │
        │      FROM table [t0]                                                                       │
        │      WHERE                                                                                 │
        │      [INNER|CROSS|(LEFT|RIGHT|FULL) OUTER] JOIN table0 t0 ON expr:<left> oper <right>      │
        └────────────────────────────────────────────────────────────────────────────────────────────┘
>d
 database(s)
   -data-full
   -data-bin
>k
 no database to close
>m
database name >data-bin
 opened on 48 ms

Using database: NJTransit-bin [Binary]
>t
┌───────────────────────────────────────────────────────────┐
│agency                                             1 row(s)│
├─────────────────────────────────┬────────┬────────┬───────┤
│column                           │type    │flags   │pages  │
├─────────────────────────────────┼────────┼────────┼───────┤
│agency_id                        │String  │-k-i-u  │1      │
│agency_name                      │String  │        │0      │
│agency_url                       │String  │        │0      │
│agency_timezone                  │String  │        │0      │
│agency_lang                      │String  │        │0      │
│agency_phone                     │String  │        │0      │
└─────────────────────────────────┴────────┴────────┴───────┘
  RowMask: 100000   RowMask length: 1

┌───────────────────────────────────────────────────────────┐
│routes                                           254 row(s)│
├─────────────────────────────────┬────────┬────────┬───────┤
│column                           │type    │flags   │pages  │
├─────────────────────────────────┼────────┼────────┼───────┤
│route_id                         │Int32   │-k-i-u  │1      │
│agency_id                        │String  │        │0      │
│route_short_name                 │String  │-i-u    │1      │
│route_long_name                  │String  │        │0      │
│route_type                       │Int32   │        │0      │
│route_url                        │String  │        │0      │
│route_color                      │String  │        │0      │
└─────────────────────────────────┴────────┴────────┴───────┘
  RowMask: 1000000   RowMask length: 1

┌───────────────────────────────────────────────────────────┐
│stops                                         16,517 row(s)│
├─────────────────────────────────┬────────┬────────┬───────┤
│column                           │type    │flags   │pages  │
├─────────────────────────────────┼────────┼────────┼───────┤
│stop_id                          │Int32   │-k-i-u  │383    │
│stop_code                        │String  │-i-u    │383    │
│stop_name                        │String  │        │0      │
│stop_desc                        │String  │        │0      │
│stop_lat                         │Double  │        │0      │
│stop_lon                         │Double  │        │0      │
│zone_id                          │Int32   │        │0      │
└─────────────────────────────────┴────────┴────────┴───────┘
  RowMask: 1000000   RowMask length: 1

┌───────────────────────────────────────────────────────────┐
│calendar_dates                                   624 row(s)│
├─────────────────────────────────┬────────┬────────┬───────┤
│column                           │type    │flags   │pages  │
├─────────────────────────────────┼────────┼────────┼───────┤
│service_id                       │Int32   │        │0      │
│date                             │Int32   │-k-i-u  │1      │
│exception_type                   │Int32   │        │0      │
└─────────────────────────────────┴────────┴────────┴───────┘
  RowMask: 100   RowMask length: 1

┌───────────────────────────────────────────────────────────┐
│trips                                      -m 30,747 row(s)│
├─────────────────────────────────┬────────┬────────┬───────┤
│column                           │type    │flags   │pages  │
├─────────────────────────────────┼────────┼────────┼───────┤
│route_id                         │Int32   │-k-i-u  │1      │
│service_id                       │Int32   │-k-i-u  │2      │
│trip_id                          │Int32   │-k-i-u  │383    │
│trip_headsign                    │String  │        │0      │
│direction_id                     │Int32   │        │0      │
│block_id                         │String  │        │0      │
│shape_id                         │Int32   │        │0      │
└─────────────────────────────────┴────────┴────────┴───────┘
  RowMask: 1000000   RowMask length: 1

┌───────────────────────────────────────────────────────────┐
│stop_times                              -m 1,642,266 row(s)│
├─────────────────────────────────┬────────┬────────┬───────┤
│column                           │type    │flags   │pages  │
├─────────────────────────────────┼────────┼────────┼───────┤
│trip_id                          │Int32   │-k-i-u  │383    │
│arrival_time                     │String  │        │0      │
│departure_time                   │String  │        │0      │
│stop_id                          │Int32   │-k-i-u  │383    │
│stop_sequence                    │Int32   │        │0      │
│pickup_type                      │Int32   │        │0      │
│drop_off_type                    │Int32   │        │0      │
│shape_dist_traveled              │Double  │        │0      │
└─────────────────────────────────┴────────┴────────┴───────┘
  RowMask: 10000000   RowMask length: 1

┌───────────────────────────────────────────────────────────┐
│shapes                                       219,340 row(s)│
├─────────────────────────────────┬────────┬────────┬───────┤
│column                           │type    │flags   │pages  │
├─────────────────────────────────┼────────┼────────┼───────┤
│shape_id                         │Int32   │-k-i-u  │47     │
│shape_pt_lat                     │Double  │        │0      │
│shape_pt_lon                     │Double  │        │0      │
│shape_pt_sequence                │Int32   │        │0      │
│shape_dist_traveled              │Double  │        │0      │
└─────────────────────────────────┴────────┴────────┴───────┘
  RowMask: 10000   RowMask length: 1

ref:   -m MultiKey   -k Key   -i Indexed   -u Unique

>s
 query >SELECT * FROM agency

 query parsed on 81 ms
  SELECT * FROM agency
┌─────┬───────────┬────────────────┬───────────────────────────┬──────────────────┬─────────────┬──────────────┐
│ #   │ agency_id │ agency_name    │ agency_url                │ agency_timezone  │ agency_lang │ agency_phone │
├─────┼───────────┼────────────────┼───────────────────────────┼──────────────────┼─────────────┼──────────────┤
│ 1   │ NJB       │ NJ TRANSIT BUS │ http://www.njtransit.com/ │ America/New_York │ en          │              │
└─────┴───────────┴────────────────┴───────────────────────────┴──────────────────┴─────────────┴──────────────┘
 displayed 1 row(s)
>k
 closing database [NJTransit-bin]
>q

Press any key to finish!




System.Runtime, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'

using System;
using System.Collections.Generic;
using CsvDb;

namespace CsvDb.Dynamic
{
        public interface IDbColumnClass {
                bool Unique { get; }
                IEnumerable<KeyValuePair<string,int>> Keys { get; }
                DbTable Table { get; }
        }

        public class agency: IDbColumnClass
        {
                public String agency_id {get; set; }
                public String agency_name {get; set; }
                public String agency_url {get; set; }
                public String agency_timezone {get; set; }
                public String agency_lang {get; set; }
                public String agency_phone {get; set; }
                public bool Unique => true;
                public IEnumerable<KeyValuePair<string,int>> Keys
                {
                        get
                        {
                                return new KeyValuePair<string,int>[] { new KeyValuePair<string,int>("agency_id", 0 ) };
                        }
                }
                public DbTable Table { get; private set; }
                public agency(DbTable table )
                {
                        if((Table = table) == null)
                        {
                                throw new ArgumentException("Cannot create database class with undefined table reference");
                        };
                }
        }

        public class routes: IDbColumnClass
        {
                public Int32 route_id {get; set; }
                public String agency_id {get; set; }
                public String route_short_name {get; set; }
                public String route_long_name {get; set; }
                public Int32 route_type {get; set; }
                public String route_url {get; set; }
                public String route_color {get; set; }
                public bool Unique => true;
                public IEnumerable<KeyValuePair<string,int>> Keys
                {
                        get
                        {
                                return new KeyValuePair<string,int>[] { new KeyValuePair<string,int>("route_id", 0 ) };
                        }
                }
                public DbTable Table { get; private set; }
                public routes(DbTable table )
                {
                        if((Table = table) == null)
                        {
                                throw new ArgumentException("Cannot create database class with undefined table reference");
                        };
                }
        }

        public class stops: IDbColumnClass
        {
                public Int32 stop_id {get; set; }
                public String stop_code {get; set; }
                public String stop_name {get; set; }
                public String stop_desc {get; set; }
                public Double stop_lat {get; set; }
                public Double stop_lon {get; set; }
                public Int32 zone_id {get; set; }
                public bool Unique => true;
                public IEnumerable<KeyValuePair<string,int>> Keys
                {
                        get
                        {
                                return new KeyValuePair<string,int>[] { new KeyValuePair<string,int>("stop_id", 0 ) };
                        }
                }
                public DbTable Table { get; private set; }
                public stops(DbTable table )
                {
                        if((Table = table) == null)
                        {
                                throw new ArgumentException("Cannot create database class with undefined table reference");
                        };
                }
        }

        public class calendar_dates: IDbColumnClass
        {
                public Int32 service_id {get; set; }
                public Int32 date {get; set; }
                public Int32 exception_type {get; set; }
                public bool Unique => true;
                public IEnumerable<KeyValuePair<string,int>> Keys
                {
                        get
                        {
                                return new KeyValuePair<string,int>[] { new KeyValuePair<string,int>("date", 1 ) };
                        }
                }
                public DbTable Table { get; private set; }
                public calendar_dates(DbTable table )
                {
                        if((Table = table) == null)
                        {
                                throw new ArgumentException("Cannot create database class with undefined table reference");
                        };
                }
        }

        public class trips: IDbColumnClass
        {
                public Int32 route_id {get; set; }
                public Int32 service_id {get; set; }
                public Int32 trip_id {get; set; }
                public String trip_headsign {get; set; }
                public Int32 direction_id {get; set; }
                public String block_id {get; set; }
                public Int32 shape_id {get; set; }
                public bool Unique => false;
                public IEnumerable<KeyValuePair<string,int>> Keys
                {
                        get
                        {
                                return new KeyValuePair<string,int>[] { new KeyValuePair<string,int>("route_id", 0 ), new KeyValuePair<string,int>("service_id", 1 ), new KeyValuePair<string,int>("trip_id", 2 ) };
                        }
                }
                public DbTable Table { get; private set; }
                public trips(DbTable table )
                {
                        if((Table = table) == null)
                        {
                                throw new ArgumentException("Cannot create database class with undefined table reference");
                        };
                }
        }

        public class stop_times: IDbColumnClass
        {
                public Int32 trip_id {get; set; }
                public String arrival_time {get; set; }
                public String departure_time {get; set; }
                public Int32 stop_id {get; set; }
                public Int32 stop_sequence {get; set; }
                public Int32 pickup_type {get; set; }
                public Int32 drop_off_type {get; set; }
                public Double shape_dist_traveled {get; set; }
                public bool Unique => false;
                public IEnumerable<KeyValuePair<string,int>> Keys
                {
                        get
                        {
                                return new KeyValuePair<string,int>[] { new KeyValuePair<string,int>("trip_id", 0 ), new KeyValuePair<string,int>("stop_id", 3 ) };
                        }
                }
                public DbTable Table { get; private set; }
                public stop_times(DbTable table )
                {
                        if((Table = table) == null)
                        {
                                throw new ArgumentException("Cannot create database class with undefined table reference");
                        };
                }
        }

        public class shapes: IDbColumnClass
        {
                public Int32 shape_id {get; set; }
                public Double shape_pt_lat {get; set; }
                public Double shape_pt_lon {get; set; }
                public Int32 shape_pt_sequence {get; set; }
                public Double shape_dist_traveled {get; set; }
                public bool Unique => true;
                public IEnumerable<KeyValuePair<string,int>> Keys
                {
                        get
                        {
                                return new KeyValuePair<string,int>[] { new KeyValuePair<string,int>("shape_id", 0 ) };
                        }
                }
                public DbTable Table { get; private set; }
                public shapes(DbTable table )
                {
                        if((Table = table) == null)
                        {
                                throw new ArgumentException("Cannot create database class with undefined table reference");
                        };
                }
        }

}